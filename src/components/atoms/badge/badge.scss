@use "sass:map";

/* base badge styles */
.badge {
  display: inline-flex;
  vertical-align: top;
  align-items: center;
  max-width: 100%;
  outline: 0;
  border-radius: 0.125rem;

  font-weight: $font-weight-semibold;
  line-height: $line-height-shorter;

  /* badge size sm */ 
  &.sm {
    min-height: $spacing-md;
    min-width: $spacing-md;
    font-size: $font-size-xs;
    padding-left: $spacing-xxs;
    padding-right: $spacing-xxs;
  }

  /* badge size md */ 
  &.md {
    min-height: $spacing-lg;
    min-width: $spacing-lg;
    font-size: $font-size-sm;
    padding-left: $spacing-xxs;
    padding-right: $spacing-xxs;
  }

  /* badge size lg */ 
  &.lg {
    min-height: $spacing-xl;
    min-width: $spacing-xl;
    font-size: $font-size-md;
    padding-left: $spacing-xs;
    padding-right: $spacing-xs;
  }

  @each $color in $colors-list {
    $color-100: map.get($colors-map, #{$color + '100'});
    $color-200: map.get($colors-map, #{$color + '200'});
    $color-500: map.get($colors-map, #{$color + '500'});
    $color-800: map.get($colors-map, #{$color + '800'});

    /* badge variant solid with colorscheme & dark mode */ 
    &.solid.#{"" + $color} {
      background-color: $color-500;
      color: map.get($colors-map, "white");
      
      [data-theme="dark"] & {
        color: map.get($colors-map, 'whiteAlpha800');
        background-color: rgba($color-500, 0.6);
      }
    }

    /* badge variant outline with colorScheme & dark mode */ 
    &.outline.#{"" + $color} {
      color: $color-500;
      box-shadow: inset 0 0 0px 1px currentColor;
      
      [data-theme="dark"] & {
        color: rgba($color-200, 0.8);
      }
    }

    /* badge variant subtle with colorScheme & dark mode */ 
    &.subtle.#{"" + $color} {
      color: $color-800;
      background-color: $color-100;
      
      [data-theme="dark"] & {
        color: $color-200;
        background-color: rgba($color-200, 0.16);
      }
    }
  }
}